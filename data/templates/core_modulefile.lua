-- Copyright 2025 Vantage Compute Corporation
--
-- Licensed under the Apache License, Version 2.0 (the "License");
-- you may not use this file except in compliance with the License.
-- You may obtain a copy of the License at
--
--     http://www.apache.org/licenses/LICENSE-2.0
--
-- Unless required by applicable law or agreed to in writing, software
-- distributed under the License is distributed on an "AS IS" BASIS,
-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-- See the License for the specific language governing permissions and
-- limitations under the License.

-- -*- lua -*-
-- Enhanced module file for Core packages
-- Generated by Spack with Core/Compiler/MPI hierarchy support
{% if spec -%}
-- {{ spec.short_spec }}
{% else -%}
-- Package information not available
{% endif -%}
--

{% if spec and spec.name -%}
whatis([[Name : {{ spec.name }}]])
{% else -%}
whatis([[Name : gcc-runtime]])
{% endif -%}
{% if spec and spec.version -%}
whatis([[Version : {{ spec.version }}]])
{% else -%}
whatis([[Version : unknown]])
{% endif -%}
whatis([[Category : Core]])
whatis([[Description : GCC runtime libraries for relocatable binaries]])

{% if spec and spec.name -%}
help([[Name   : {{ spec.name }}]])
{% else -%}
help([[Name   : gcc-runtime]])
{% endif -%}
{% if spec and spec.version -%}
help([[Version: {{ spec.version }}]])
{% else -%}
help([[Version: unknown]])
{% endif -%}
help([[
GCC Runtime Libraries - Core Package

This package provides relocatable GCC runtime libraries that are used by
compiler-specific packages. This is part of the Core tier in the module
hierarchy.

Module Hierarchy:
  Core (this level) -> Compiler -> MPI

Features:
- Relocatable runtime libraries (libgcc, libstdc++, libgfortran)
- Compatible with containerized and distributed deployments
- Self-contained installation with all runtime dependencies

Usage:
  module load gcc-runtime       # Load runtime libraries
  
Note: This module is typically loaded automatically by compiler modules.
]])

-- Relocatable prefix logic
local prefix = "{prefix}"
{% if spec and spec.prefix -%}
local default_prefix = "{{ spec.prefix }}"
{% else -%}
local default_prefix = "/opt/slurm/view"
{% endif -%}

-- Use environment variable override if set
local install_prefix = os.getenv("SLURM_INSTALL_PREFIX")
if install_prefix then
    prefix = install_prefix
else
    prefix = default_prefix
end

-- Runtime library paths
prepend_path("LD_LIBRARY_PATH", pathJoin(prefix, "lib"))
prepend_path("LD_LIBRARY_PATH", pathJoin(prefix, "lib64"))

-- Set GCC runtime prefix for other modules
setenv("GCC_RUNTIME_PREFIX", prefix)

-- Metadata for hierarchy support
{% if spec and spec.compiler -%}
setenv("GCC_RUNTIME_COMPILER", "{{ spec.compiler }}")
{% endif -%}
{% if spec and spec.target -%}
setenv("GCC_RUNTIME_TARGET", "{{ spec.target }}")
{% endif -%}

-- Module identification
{% if spec and spec.name and spec.version -%}
local version = "{{ spec.version }}"
local name = "{{ spec.name }}"
{% else -%}
local version = "unknown"
local name = "gcc-runtime"
{% endif -%}

-- Prevent loading multiple gcc-runtime modules
conflict(name)

-- Family support for better module management
family("compiler-runtime")

-- Module load/unload messages
if mode() == "load" then
    LmodMessage("Loading " .. name .. " " .. version .. " from: " .. prefix)
elseif mode() == "unload" then
    LmodMessage("Unloading " .. name .. " " .. version)
end
