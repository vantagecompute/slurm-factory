# Copyright 2025 Vantage Compute Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ===== Project Metadata =====
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "slurm-factory"
version = "0.1.18"
description = "Slurm builder project by Vantage Compute"
readme = "README.md"
authors = [
    {name = "James Beedy", email = "james@vantagecompute.ai"}
]
license = {text = "MIT"}
requires-python = ">=3.11"
dependencies = [
    "craft-providers>=2.4.0",
    "typer>=0.16.0",
    "rich>=14.1.0",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
dev = [
    "ruff",
    "mypy",
    "black",
    "codespell",
    "types-pyyaml",
    "pyright",
    "pytest",
    "pytest-cov",
]

[project.scripts]
slurm-factory = "slurm_factory.main:app"

# ===== Build Configuration =====
[tool.hatch.build.targets.wheel]
packages = ["slurm_factory"]
exclude = [
    "git-cliff-*",
    "justfile",
    "docs",
    "tests",
]

[tool.hatch.build.targets.wheel.shared-data]
"data/lxd-profile.yaml" = "share/slurm-factory/lxd-profile.yaml"
"data/templates" = "share/slurm-factory/templates"
"data/spack-repo" = "share/slurm-factory/spack-repo"


[tool.hatch.build.targets.sdist]
exclude = [
    "git-cliff-*",
    "justfile",
    "docs",
    "tests",
]

# ===== Development Tools =====
[tool.black]
line-length = 110
src = ["slurm_factory"]

[tool.ruff]
line-length = 110
extend-exclude = ["__pycache__", "*.egg_info", "__init__.py", "data"]

[tool.ruff.lint]
select = ["E", "W", "F", "C", "N", "D", "I001"]
ignore = ["D203", "D212", "C901"]

[tool.mypy]
follow_imports = "silent"
ignore_missing_imports = true

# ===== Testing Configuration =====
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--tb=short",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# ===== Changelog Generation =====
# git-cliff configuration
[tool.git-cliff.changelog]
header = """
# Changelog

All notable changes to the JupyterLab Firefox Launcher project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

"""
body = """
{% if version %}\
    {% if previous.version %}\
        ## [{{ version }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}**: {% endif %}{{ commit.message | upper_first }}\
          {% if commit.breaking %} [**BREAKING**]{% endif %}
    {% endfor %}
{% endfor %}\

"""
trim = true
footer = """
<!-- generated by git-cliff -->
"""

[tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactor" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^chore\\(deps.*\\)", skip = true },
    { message = "^chore\\(pr\\)", skip = true },
    { message = "^chore\\(pull\\)", skip = true },
    { message = "^chore|^ci", group = "Miscellaneous Tasks" },
    { body = ".*security", group = "Security" },
    { message = "^revert", group = "Revert" },
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "[0-9].*"
skip_tags = ""
ignore_tags = ""
topo_order = false
sort_commits = "oldest"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
]
